// Code generated by protoc-gen-go.
// source: benchmark/benchmark.proto
// DO NOT EDIT!

package benchmark

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Foo struct {
	One string   `protobuf:"bytes,1,opt,name=one" json:"one,omitempty"`
	Two int32    `protobuf:"varint,2,opt,name=two" json:"two,omitempty"`
	Bar *Foo_Bar `protobuf:"bytes,3,opt,name=bar" json:"bar,omitempty"`
}

func (m *Foo) Reset()                    { *m = Foo{} }
func (m *Foo) String() string            { return proto.CompactTextString(m) }
func (*Foo) ProtoMessage()               {}
func (*Foo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Foo) GetBar() *Foo_Bar {
	if m != nil {
		return m.Bar
	}
	return nil
}

type Foo_Bar struct {
	One string `protobuf:"bytes,1,opt,name=one" json:"one,omitempty"`
	Two string `protobuf:"bytes,2,opt,name=two" json:"two,omitempty"`
}

func (m *Foo_Bar) Reset()                    { *m = Foo_Bar{} }
func (m *Foo_Bar) String() string            { return proto.CompactTextString(m) }
func (*Foo_Bar) ProtoMessage()               {}
func (*Foo_Bar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func init() {
	proto.RegisterType((*Foo)(nil), "benchmark.Foo")
	proto.RegisterType((*Foo_Bar)(nil), "benchmark.Foo.Bar")
}

var fileDescriptor0 = []byte{
	// 113 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0x4a, 0xcd, 0x4b,
	0xce, 0xc8, 0x4d, 0x2c, 0xca, 0xd6, 0x87, 0xb3, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38,
	0xe1, 0x02, 0x4a, 0x89, 0x5c, 0xcc, 0x6e, 0xf9, 0xf9, 0x42, 0xdc, 0x5c, 0xcc, 0xf9, 0x79, 0xa9,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x20, 0x4e, 0x49, 0x79, 0xbe, 0x04, 0x13, 0x90, 0xc3, 0x2a,
	0x24, 0xcf, 0xc5, 0x9c, 0x94, 0x58, 0x24, 0xc1, 0x0c, 0xe4, 0x70, 0x1b, 0x09, 0xe9, 0x21, 0x8c,
	0x02, 0x6a, 0xd3, 0x73, 0x4a, 0x2c, 0x92, 0x02, 0x2a, 0x00, 0x52, 0x38, 0x4d, 0xe0, 0x4c, 0x62,
	0x03, 0x5b, 0x6a, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x42, 0x09, 0x0f, 0x91, 0x00, 0x00,
	0x00,
}
