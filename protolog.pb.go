// Code generated by protoc-gen-go.
// source: protolog.proto
// DO NOT EDIT!

package protolog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"
import google_protobuf1 "go.pedge.io/google-protobuf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Level is a logging level.
type Level int32

const (
	Level_LEVEL_NONE  Level = 0
	Level_LEVEL_DEBUG Level = 1
	Level_LEVEL_INFO  Level = 2
	Level_LEVEL_WARN  Level = 3
	Level_LEVEL_ERROR Level = 4
	Level_LEVEL_FATAL Level = 5
	Level_LEVEL_PANIC Level = 6
)

var Level_name = map[int32]string{
	0: "LEVEL_NONE",
	1: "LEVEL_DEBUG",
	2: "LEVEL_INFO",
	3: "LEVEL_WARN",
	4: "LEVEL_ERROR",
	5: "LEVEL_FATAL",
	6: "LEVEL_PANIC",
}
var Level_value = map[string]int32{
	"LEVEL_NONE":  0,
	"LEVEL_DEBUG": 1,
	"LEVEL_INFO":  2,
	"LEVEL_WARN":  3,
	"LEVEL_ERROR": 4,
	"LEVEL_FATAL": 5,
	"LEVEL_PANIC": 6,
}

func (x Level) String() string {
	return proto.EnumName(Level_name, int32(x))
}

// MessageType is the type of protolog message.
type MessageType int32

const (
	MessageType_MESSAGE_TYPE_NONE    MessageType = 0
	MessageType_MESSAGE_TYPE_EVENT   MessageType = 1
	MessageType_MESSAGE_TYPE_CONTEXT MessageType = 2
)

var MessageType_name = map[int32]string{
	0: "MESSAGE_TYPE_NONE",
	1: "MESSAGE_TYPE_EVENT",
	2: "MESSAGE_TYPE_CONTEXT",
}
var MessageType_value = map[string]int32{
	"MESSAGE_TYPE_NONE":    0,
	"MESSAGE_TYPE_EVENT":   1,
	"MESSAGE_TYPE_CONTEXT": 2,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

// Fields is a generic context Message used for
// the Logger functions WithField and WithFields.
type Fields struct {
	Value map[string]string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Fields) Reset()         { *m = Fields{} }
func (m *Fields) String() string { return proto.CompactTextString(m) }
func (*Fields) ProtoMessage()    {}

func (m *Fields) GetValue() map[string]string {
	if m != nil {
		return m.Value
	}
	return nil
}

// Event is a generic event Message used for
// the non-protobuf-specific Logger functions.
type Event struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}

// WriterOutput is an event Message used for
// the writer Logger functions.
type WriterOutput struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *WriterOutput) Reset()         { *m = WriterOutput{} }
func (m *WriterOutput) String() string { return proto.CompactTextString(m) }
func (*WriterOutput) ProtoMessage()    {}

// Entry is the object serialized for logging.
type Entry struct {
	Id        string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Level     Level                       `protobuf:"varint,2,opt,name=level,enum=protolog.Level" json:"level,omitempty"`
	Timestamp *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Context   []*Entry_Message            `protobuf:"bytes,4,rep,name=context" json:"context,omitempty"`
	Event     *Entry_Message              `protobuf:"bytes,5,opt,name=event" json:"event,omitempty"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}

func (m *Entry) GetTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Entry) GetContext() []*Entry_Message {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Entry) GetEvent() *Entry_Message {
	if m != nil {
		return m.Event
	}
	return nil
}

// Message represents a serialized protobuf Message.
// The name is the name registered with protolog.
type Entry_Message struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Entry_Message) Reset()         { *m = Entry_Message{} }
func (m *Entry_Message) String() string { return proto.CompactTextString(m) }
func (*Entry_Message) ProtoMessage()    {}

var E_Event = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50009,
	Name:          "protolog.event",
	Tag:           "varint,50009,opt,name=event",
}

var E_Context = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50010,
	Name:          "protolog.context",
	Tag:           "varint,50010,opt,name=context",
}

func init() {
	proto.RegisterEnum("protolog.Level", Level_name, Level_value)
	proto.RegisterEnum("protolog.MessageType", MessageType_name, MessageType_value)
	proto.RegisterExtension(E_Event)
	proto.RegisterExtension(E_Context)
}
